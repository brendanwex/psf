<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d19d97f189d9c212088df770e7fb6e21/ */
/* Type: array */
/* Expiration: 2019-07-16T07:38:50+02:00 */



$loaded = true;
$expiration = 1563255530;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1562842145;

